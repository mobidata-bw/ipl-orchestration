providers:
  file:
    directory: /etc/traefik
    watch: true # todo: keep?
  docker:
    # only expose services if they have an explicit traefik.enable=true label
    exposedByDefault: false

log:
  level: INFO

api:
  # enable web UI on port 8080
  insecure: true

entryPoints:
  # explicitly define an entrypoint `web` on port 80
  web:
    address: ":80"
    http:
      middlewares:
        # by default, apply a global request rate limit
        - global-rate-limit@file
        # redirect all `http:` requests to `https:`
        # todo: only do this in production
        # - redirect-http-to-https@file
        # don't sniff the mime type from the response body (will be removed in Traefik v3)
        - no-mime-sniff@file
        # enable response compression by default
        - compression@file
      # redirect all `http:` requests to `https:`
      # todo: only do this in production
      # redirections:
      #   entryPoint:
      #     to: ":443"
      #     scheme: https
      #     priority: 0 # run before all other middleware
    forwardedHeaders:
      # Trust all `X-Forwarded-*` headers passed from the a reverse proxy *in front of Traefik*
      # (if uses one of the specified IP addresses/ranges), and pass them through to services,
      # instead of filtering them out. The address of this "external" reverse proxy depends on
      # Docker's network configuration.
      # - By default, Docker uses the "bridge" networking integration: It does NAT[1] between
      #   the host's network and the Docker-internal network. Its default (bridge) network called
      #   `bridge` usually uses `172.17.0.0/16`, with `172.17.0.1` being the gateway.
      # - In our docker-compose.yaml, we have configured our own (bridge) network `ipl` using
      #   `172.28.0.0/16` (gateway is `172.28.5.254`), so we add it here.
      # [1] https://en.wikipedia.org/wiki/Network_address_translation
      # todo: do we want to use [host networking](https://docs.docker.com/network/network-tutorial-host/)? then we need to add the MobiData-BW load balancer IPs here!
      trustedIPs:
        # loopback a.k.a. local
        - "127.0.0.1"
        # gateway of the default Docker (brdige) network
        - "172.17.0.1"
        # gateway of our custom Docker Compose (bridge) network (`ipl`)
        - "172.28.5.254"
  # explicitly define an entrypoint `traefik` on port 8080 for ops & system management
  # - web UI
  # - Prometheus metrics
  traefik:
    address: ":8080"

accesslog:
  filePath: "/var/log/traefik/access.log"
  format: json
  # increase logging performance, risk loss of in-memory logs
  bufferingSize: 100
  # include all headers in the access log
  fields:
    headers:
      defaultMode: keep

metrics:
  prometheus:
    # expose metrics on the `traefik` entrypoint
    entryPoint: traefik

# todo: move /health to `web` entrypoint instead of default `traefik`, to allow health-checking from the outside?
ping: true
